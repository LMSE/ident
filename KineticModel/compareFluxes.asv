%function [hfig,hsubfig] = compareFluxes(model,npertb,varname,solution,...
%                                          ColorSpec,LineP,hsubfig)
%**************************************************************************
%Compare flux response to input perturbations
%December 2014
%**************************************************************************
function [hfig,hsubfig] = compareFluxes(nmodels,npertb,flux_ind,solution,ColorSpec)
nflux = length(flux_ind);
if nargin < 7
    hsubfig = zeros(npertb,1);
end
if nargin < 6
    LineP = struct();
end

flux = zeros(nflux,nmodels);
xticklabel = cell(nflux,1);
DisplayName = cell(nmodels,1);
hsubfig = zeros(npertb,1);
hbar = zeros(npertb,nflux);
for ipertb = 1:npertb
    pname = sprintf('pertb%d',ipertb);
    pfname = sprintf('Perturbation %d',ipertb);
    for ivar = 1:nflux    
        xticklabel{ivar} = sprintf('Flux %d',ivar);
        for imodel = 1:nmodels
            mname = sprintf('model%d',imodel);
            DisplayName{imodel} = mname;
            flux(ivar,imodel) = solution.(pname).(mname).flux(flux_ind(ivar));
        end       
    end      
    if isempty(findobj('type','figure','Name','Fluxes'))
        hfig = figure('Name','Fluxes'); 
        figure(hfig);
    end  
    figure(hfig);
    hsubfig(ipertb) = subplot(npertb,1,ipertb);     
    hbar(ipertb,:) = bar(hsubfig(ipertb),1:nflux,flux,'BarWidth',1,...
                                            'EdgeColor','none');
    hca = findobj(hsubfig(ipertb),'type','axes');
    set(hfig,'CurrentAxes',hca);
    set(gca,'Title',text('String',pfname,'Color','k'));
    set(get(gca,'Title'),'FontName','Arabic Type Setting');
    set(get(gca,'Title'),'FontSize',12);
    set(get(gca,'Title'),'FontWeight','bold'); 
    set(get(gca,'YLabel'),'String','Fluxes mmole/gDCW.h');  
    set(get(gca,'YLabel'),'FontName','Arabic Type Setting');   
    set(get(gca,'YLabel'),'FontSize',12);
    
    for ibar = 1:nmodels
        set(hbar(ipertb,ibar),'FaceColor',ColorSpec{ibar});
    end
    hold on  
end
%Formatting
%Identify Top row
ht_bar = hbar(1,:);
for ih = 1:nmodels
    set(ht_bar(ih),'DisplayName',DisplayName{ih});
end
%Identify middle row
if rem(npertb,2) == 0
    mpertb = npertb/2;
else
    mpertb = (npertb+1)/2;
end
hm_fig = hsubfig(mpertb);
% hca = findobj(hm_bar(1,1),'type','axes');

%Identifying last row
he_fig = hsubfig(end);
% hca = findobj(he_bar(1,1),'type','axes');
set(hfig,'CurrentAxes',he_fig);
set(gca,'XTickLabel',xticklabel);
set(gca,'FontName','Arabic Type Setting');
set(gca,'FontSize',12);
set(get(gca,'XLabel'),'String','Flux #');
set(get(gca,'XLabel'),'FontName','Arabic Type Setting');
set(get(gca,'XLabel'),'FontSize',12);
FProperty.NumberTitle = 'off';
FProperty.Color = [1 1 1];  
set(hfig,FProperty);
legend(findobj(hsubfig(1),'type','axes'),'show');
legend(findobj(hsubfig(1),'type','axes'),'boxoff');


%Scatter Plots

            
    
%     var_tf = strcmpi(flux_ind{ivar},model.Metabolites);
%     y_label{ivar} = sprintf('%s mmole/g DCW',model.Metabolites{var_tf});
%     if any(var_tf(1:model.nint_metab))            
%         var_tf = logical(var_tf(1:model.nint_metab));
%     end
%     %Figure Properties, Misc
  
    
        
   
%         if hsubfig(iplot) ~= 0
%             hca = findobj(hsubfig(iplot),'type','axes');
%             set(hfig,'CurrentAxes',hca);                
%         else%subplot is unassigned
%             hsubfig(iplot) = subplot(nflux,npertb,iplot);  
%             hca = gca;
%             %Make sure more plots can be added at end of loop
%             set(hca,'NextPlot','add');     
%             set(hsubfig(iplot),'NextPlot','add');
%         end
        
            
            
%             LineP.DisplayName = mname;
%             LineP.Color = ColorSpec{imodel};
%             hline = line('XData',data.t(:),'YData',data.y(var_tf,:));            
%             if ~isempty(LineP)
%                 set(hline,LineP);
%             else
%                 set(hline,'Color',[0 .5 0]);
%             end
        

% last_hsub = reshape(hsubfig,[npertb,nflux])';
% lr_hsub = last_hsub(end,:)';
% for isub = 1:length(lr_hsub)
%     x_label = 'Time(s)';   
%     hca = findobj(lr_hsub(isub),'type','axes');
%     set(hfig,'CurrentAxes',hca);

% end
% %Identifying first column
% fc_hsub = last_hsub(:,1);
% for isub = 1:length(fc_hsub)
%     %x_label = 'Time(s)';   
%     hca = findobj(fc_hsub(isub),'type','axes');
%     set(hfig,'CurrentAxes',hca);

% end    

% %Identifying First row
% fr_hsub = last_hsub(1,:);
% for isub = 1:length(fr_hsub)
%     hca = findobj(fr_hsub(isub),'type','axes');
%     set(hfig,'CurrentAxes',hca);
%     pname = sprintf('Perturbation %d',isub);

% end

return
    