%function [h_vec] = dynamicplot(trnmodel,gname,pname,data,figh)
%**************************************************************************
%Plot dynamic response of genes and proteins to input perturbations
%December 2013
%**************************************************************************
function [hsubfig] = plotEnsemble(model,ng,varname,data,hfig,hsubfig,LineP)
if nargin < 9
    savefile = struct([]);
end
if nargin < 7 
    LineP = struct();
    LineP.LineWidth = 1.5;
    LineP.Color = [0 .5 0];
end
if nargin < 6
    hsubfig = zeros(nplots,1);
end
if nargin < 5
    hfig = figure;    
else
    figure(hfig);    
end

nplots = length(varname);
if rem(nplots,2) == 0  
   n = nplots/2;
else
    n = (nplots+1)/2;
end
for ivar = 1:nplots
    %Data for plotting 
    if ng(1) == 0%Metabolic Model
        var_tf = strcmpi(varname{ivar},model.Metabolites);
    else%TRN model/Integrated Model    
        var_tf = strcmpi(varname{ivar},model.Regulators);    
    end
    if any(var_tf)
        m_tf = strcmpi(varname{ivar},model.Metabolites);
        if isfield(model,'Proteins')
            p_tf = strcmpi(varname{ivar},model.Proteins);
        end
        if any(m_tf)
            y_label = sprintf('%s Conentration',model.Metabolites{m_tf}); 
            if ng(1) == 0%Metabolic Model
                var_tf = logical([zeros(ng(1),1);var_tf]);
            else%TRN/Integrated Model
                var_tf = logical([zeros(ng(1),1);var_tf;0]);
            end             
        elseif any(p_tf)
            y_label = sprintf('Flux of %s',model.Proteins{p_tf}); 
            var_tf = logical([zeros(ng(1),1);var_tf;0]);
        end
    end
    %Figure Properties, Misc
    figure(hfig);
    if hsubfig(ivar) ~= 0
        hca = findobj(hsubfig(ivar),'type','axes');
        set(hfig,'CurrentAxes',hca);                
    else%subplot is unassigned
        hsubfig(ivar) = subplot(2,n,ivar);       
        hca = gca;
        %Make sure more plots can be added at end of loop
        set(hca,'NextPlot','add');     
        set(hsubfig(ivar),'NextPlot','add');
    end
    hline = line('XData',data.t(:),'YData',data.y(var_tf,:));
    if ~isempty(LineP)
        set(hline,LineP);
    else
        set(hline,'Color',[0 .5 0]);
    end
    x_label = 'Time(s)';    
    set(get(gca,'XLabel'),'String',x_label);
    set(get(gca,'XLabel'),'FontName','Arabic Type Setting');
    set(get(gca,'XLabel'),'FontSize',12);
    set(get(gca,'YLabel'),'String',y_label);  
    set(get(gca,'YLabel'),'FontName','Arabic Type Setting');   
    set(get(gca,'YLabel'),'FontSize',12);
    
%         ymax = sd_round(max(data.y(var_tf,:)),8,5);
%         ymin = sd_round(min(data.y(var_tf,:)),8,5); 

    
%     if ymax ~=0 || ymin ~= 0 || (ymax ~= 0 && ymin ~= 0)
%         AProperty.YLim = [ymin-10^floor(log10(ymin)) ymax+10^floor(log10(ymax))];
%         ymin = ymin - 10^floor(log10(ymin));
%         ymax = ymax + 10^floor(log10(ymax));       
%     elseif ymax == 0 && ymin == 0
%         AProperty.YLim = [ymin-1e-3 ymax+1e-3];
%         ymin = ymin - 1e-3;
%         ymax = ymax + 1e-3;
%     ends

    
%     set(gca,'YTick',ymin:((ymax-ymin)/10):ymax);
    % whitebg(hfig,[0 0 0]);
    
end        

end
