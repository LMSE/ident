function [L,Ldot] = Lagrange(tau,j,x)
%Lagrange polynomial - L(tau)
K = size(x,1)-1;
idx1 = setdiff(0:K, j);
nr_x1 = repmat(tau,length(idx1),1)-x(idx1+1);
dr_x1 = 

mult = 1;
for mk = 0:K
    if mk ~= j
        mult = mult*(tau - x(mk+1))/(x(j+1) - x(mk+1));        
    end
end
L = mult;

%L'(tau)
% K - 0,1,2,3
% k - 0,1,2,3

nr_t = 0;
dr_t = 1;
k = setdiff(0:K,j);
for jk = 1:length(k)
    idx = setdiff(0:K, [k(jk),j]);
    delx = repmat(tau,length(idx+1),1)-x(idx+1);
    nr_t = nr_t + prod(delx);
    dr_t = dr_t*(x(j+1)-x(k(jk)+1));
end
Ldot = nr_t/dr_t;
for k = 0:ncol
    idx = setdiff(0:K,[j,k]);
    x = repmat(tau,K,1) - x(idx);
    nr_t = nr_t + prod(x);
end
sum(nr_pr);
% 
% nr_pr = 
% dr_pr = 
% Ldot = L*sumt;
% 
% Dr = repmat(x(0),K,1)-x(k~=j)
% Nr = repmat(tau,K,1)-x(k~=j)
% 
% prod(Nr./Dr)