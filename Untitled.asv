function modelIrrev = 
%convert to irreversible model
modelIrrev = convertIrreversible(model);

%adding sum of all fluxes to Irrev S
%add meatabolite to S
modelIrrev.S(end+1,:) = ones(size(modelIrrev.S(1,:)));
modelIrrev.b(end+1) = 0;
modelIrrev.mets{end+1} = 'fluxMeasure';

nm = size(modelIrrev.mets,1);

%add reaction to S matrix
modelIrrev.S(:,end+1) = sparse(find(strcmpi('fluxMeasure',modelIrrev.mets)),1,-1,nm,1);
modelIrrev.rxns{end+1} = 'netFlux';
modelIrrev.vl(end+1) = 0;
modelIrrev.vu(end+1) = Inf;
modelIrrev.rev(end+1) = 0;

prxnid = find(strcmpi('netFlux',modelIrrev.rxns));
bounds.vl = modelIrrev.vl;
bounds.vu = modelIrrev.vu;
[vLPmax,vLPmin] = solveLP(modelIrrev,bounds,prxnid);

if vLPmin.flag > 0
    modelIrrev.vl(prxnid) = vLPmin.obj;
    modelIrrev.vu(prxnid) = vLPmin.obj;
    
    bounds.vl = modelIrrev.vl;
    bounds.vu = modelIrrev.vu;
    
    %resolve for biomass with pFBA constraints
    [vLPmax,vLPmin,flag] = solveLP(modelIrrev,bounds,model.bmrxn);
end
    